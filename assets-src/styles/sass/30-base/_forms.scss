/*------------------------------------*\
    #Forms
\*------------------------------------*/


/**
Start of resets for the fieldset element
https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
 */
fieldset {
	// If you want a border etc., apply this to a wrapping container for the fieldset
	border: 0;
	margin: 0;
	min-inline-size: 0;
	padding: 0.01em 0 0 0;
}

body:not(:-moz-handler-blocked) fieldset {
	display: table-cell; // Deal with fieldset width in Firefox
}
/**
End of resets for the fieldset element
 */


// .field-group + .field-group {
// 	margin-block-start: 2.5rem;
// }

// form > * + *,
// .field-group > * + * {
// 	margin-block-start: 1.75rem;
// }

/**
Group inputs to line up side-by-side
 */
.input-group {
	display: flex;
	align-items: center;
}

.input-group > * + * {
	margin-inline-start: rem(30);
}

.field-legend {
	@include txt-saturn;
	font-weight: bold;
}

.field {
	max-inline-size: rem($text-measure);
}

label,
.field-label,
.field-hint,
.field-error-msg,
.faux-label {
	display: block;
}

// .field-label,
// .faux-label {
// 	margin-block-end: 0.25rem;
// }

.field-label,
.group-legend {
	font-weight: bold;

	// + .field-hint {
	// 	margin-block-start: 0.25rem;
	// }
}

.field-hint {
	@include txt-pluto;
	color: $storm-gray;
	// margin-block-end: 0.25rem;
	max-inline-size: rem($text-measure);
}

.required {
	color: $storm-gray;
	font-weight: normal;
}

textarea,
[type=date],
[type=email],
[type=file],
[type=number],
[type=password],
[type=search],
[type=tel],
[type=text],
[type=time],
[type=url] {
	appearance: none;
	-webkit-appearance: none;
	border: 2px solid;
	border-radius: 0;
    inline-size: 100%;
	line-height: 1.25;
	padding: rem(5);

	&:focus {
		box-shadow: inset 0 0 0 2px;
		outline: solid 3px $focus-color;
		outline-offset: 0;
	}
}

select,
[type=date],
[type=email],
[type=number],
[type=password],
[type=search],
[type=tel],
[type=text],
[type=time],
[type=url] {
	height: rem(47); // Matches button height
}

[type="file"] {
	border-color: transparent;

	&:focus {
		border-color: currentColor;
		box-shadow: inset 0 0 0 4px;
		margin-inline: rem(-5);
		outline: 3px solid $focus-color;
		padding-inline: rem(5);
	}
}


/**
Search
 */
[type="search"]::-webkit-search-decoration,
[type="search"]::-webkit-search-cancel-button {
	appearance: none;
}


/**
Select
 */
select {
	background-color: transparent;
	border: 2px solid;
	border-radius: 0;
    inline-size: 100%;
	line-height: 1.25;
	padding: rem(5);

	&:focus {
		box-shadow: inset 0 0 0 2px;
		outline: solid 3px $focus-color;
		outline-offset: 0;
	}
}

/**
Select with custom arrow icon
 */
@supports (padding-inline-start: 1em) {
	select {
		appearance: none;
		background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 320 512'%3E%3Cpath d='M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z'/%3E%3C/svg%3E");
		background-position: center right rem(10);
		background-repeat: no-repeat;
		background-size: rem(15);
		padding-inline-end: rem(34);
	}

	[dir="rtl"] select {
		background-position: center left rem(10);
	}
}


/**
Textarea
 */
textarea {
	height: 10em;
	resize: vertical;
}


/**
Memorable dates (e.g. date of birth)
 */
.memorable-date {
	display: inline-block;
	margin-block-start: 0;
}

.memorable-date + .memorable-date {
	margin-inline-start: 1rem;
}


/**
Radio/checkbox inputs
 */
.radio-item,
.checkbox-item {
	clear: left;
	float: left;
	margin-block-start: 0.25rem;
	padding-inline-start: rem(34);
	position: relative;

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

[dir="rtl"] {
	.radio-item,
	.checkbox-item {
		clear: right;
		float: right;
	}
}

.radio-item input,
.checkbox-item input {
    block-size: rem(44);
	cursor: pointer;
    inline-size: rem(44);
    inset-block-start: rem(-2);
	inset-inline-start: rem(-10);
	margin: 0;
	opacity: 0;
	position: absolute;
	z-index: 1;
}

.radio-item label,
.checkbox-item label {
	cursor: pointer;
	display: inline-block;
	margin-block: rem(-2) 0;
	padding: rem(11) rem(15) rem(10) rem(1);
	touch-action: manipulation;

	&::before,
	&::after {
		content: '';
		position: absolute;
	}

	&::before {
		background: transparent;
        block-size: rem(24);
		border: 2px solid;
        inline-size: rem(24);
        inset-block-start: rem(8);
		inset-inline-start: 0;
	}
}

[dir="rtl"] {
	.radio-item label,
	.checkbox-item label {
		padding: rem(11) rem(1) rem(10) rem(15);
	}
}

.radio-item label {
	&::before,
	&::after {
		border-radius: 50%;
	}

	&::after {
		background: currentColor;
        block-size: 0;
		border: 5px solid;
        inline-size: 0;
        inset-block-start: rem(15);
		inset-inline-start: rem(7);
		opacity: 0;
	}
}

.checkbox-item label {
	&::after {
		background: transparent;
        block-size: rem(6.5);
		border: solid;
		border-block-start-color: transparent;
		border-width: 0 0 3px 3px;
        inline-size: rem(12);
        inset-block-start: rem(15);
		inset-inline-start: rem(6);
		opacity: 0;
		transform: rotate(-45deg);
	}
}

.checkbox-group--cluster .checkbox-item {
	clear: none;
	margin-block-end: rem(12);
}

// Radio/checkbox input with hover
.radio-item:hover input:not(:disabled) + label,
.checkbox-item:hover input:not(:disabled) + label {
	&::before {
		box-shadow: 0 0 0 4px $blue;
	}
}

// Radio/checkbox input with focus
.radio-item input:focus + label,
.checkbox-item input:focus + label {
	&::before {
		border-width: 4px;
		box-shadow: 0 0 0 4px $focus-color;
	}
}

// Radio/checkbox input with focus and hover
.radio-item:hover input:focus + label,
.checkbox-item:hover input:focus + label {
	&::before {
		box-shadow: 0 0 0 4px $focus-color;
	}
}

// Radio/checkbox input checked
.radio-item input:checked + label,
.checkbox-item input:checked + label {
	&::after {
		opacity: 1;
	}
}

// Radio/checkbox input disabled
[type="radio"]:disabled,
[type="radio"]:disabled + label
[type="checkbox"]:disabled,
[type="checkbox"]:disabled + label {
	cursor: default
}

[type="radio"]:disabled + label,
[type="checkbox"]:disabled + label {
	opacity: .5;
}


/**
Segmented options. Can use either radio or checkbox inputs. The purpose is to
show all available options outright, rather than hide them behind a <select>
 */
.segmented-group-wrapper {
	max-inline-size: none;
}

.segmented-group.l-switcher {
	margin-block-start: 0;

	> * > * {
		max-inline-size: 100%;
		min-inline-size: 33.333%; // Modify the percentage according to the number of choices and what looks best
		position: relative; // Required for the absolutely positioned input indicator
	}

	label {
		border: 2px solid;
		cursor: pointer;
		display: block;
		margin: rem(2);

		&:before,
		&:after {
			content: '';
			position: absolute;
		}

		&::before {
			background: transparent;
			block-size: rem(24);
            inline-size: rem(24);
            inset-block-start: rem(10);
			inset-inline-start: rem(10);
		}

		&::after {
			background: transparent;
            block-size: rem(6.5);
			border: solid;
			border-block-start-color: transparent;
			border-width: 0 0 3px 3px;
            inline-size: rem(12);
            inset-block-start: rem(17);
			inset-inline-start: rem(16);
			opacity: 0;
			transform: rotate(-45deg);
		}
	}

	input {
		cursor: pointer;
		block-size: rem(44);
        inline-size: rem(44);
        inset-block-start: 0;
        inset-inline-end: 0;
		margin: 0;
		opacity: 0;
		position: absolute;
		z-index: 1;
	}

	.segmented-label {
		//@include stack(.5em);
		display: block;
		padding: rem(10);
		padding-inline-start: rem(44);

		span {
			display: block;
		}

		span:first-of-type {
			font-weight: bold;
		}
	}

	// Input with hover
	> * > *:hover label {
		background-color: $light-blue;
	}

	// Input with focus
	input:focus + label {
		border-color: $focus-color;
		box-shadow: inset 0 0 0 4px;
		outline: solid 2px $focus-color;
	}

	// Input checked
	input:checked + label {
		&::after {
			opacity: 1;
		}
	}
}


/**
Fixed input widths
 */
.input-width-30 {
	max-inline-size: 59ex;
}

.input-width-20 {
    max-inline-size: 41ex;
}

.input-width-10 {
    max-inline-size: 23ex;
}

.input-width-5 {
    max-inline-size: 10.8ex;
}

.input-width-4 {
    max-inline-size: 9ex;
}

.input-width-3 {
    max-inline-size: 7.2ex;
}

.input-width-2 {
    max-inline-size: 5.4ex;
}

/**
Error styles
 */
[data-component="error-summary"] li a {
	color: $error-color;
	display: inline-block;
	font-weight: bold;
	padding-block: rem(10);

	&:hover,
	&:visited {
		color: $error-color;
	}

	&:focus {
		color: $black;
	}
}

.field--error {
	border-inline-start: solid rem(5) $error-color;
	padding-inline-start: rem(15);

	input:not([type="file"]),
	textarea:not(:focus) {
		border-color: $error-color;
	}

	input:focus,
	textarea:focus {
		border-color: inherit;
	}
}

.field-error-msg {
	color: $error-color;
	font-weight: bold;
	margin-block-start: rem(15);
}

/**
Progress bar
 */
.progress-list {
	margin-block-end: rem(30);

	@include mq($bp-tab-small) {
		display: flex;
		flex-wrap: wrap;
	}
}

.progress-list li {
	position: relative;

	&::after {
		background-color: $storm-gray;
        block-size: rem(13);
		content:'';
        inline-size: rem(3);
        inset-block-end: rem(-16);
		inset-inline-start: rem(19);
		position: absolute;

		@include mq($bp-tab-small) {
            block-size: rem(3);
            inline-size: 100%;
            inset-block-end: auto;
            inset-block-start: rem(32);
            inset-inline-start: 50%;
			z-index: -1;
		}
	}

	+ li {
		margin-block-start: rem(20);

		@include mq($bp-tab-small) {
            margin-block-start: 0;
		}
	}
}

.progress-list li.complete {
	&::after {
		background-color: $teal-green;
	}
}

.progress-list li:last-child {
	&::after {
		display: none;
	}
}

.progress-step__inner {
	align-items: center;
	display: flex;

	@include mq($bp-tab-small) {
		flex-direction: column;
		padding-block-start: rem(10);
		text-align: center;
	}

	> span {
		@include txt-pluto;
		padding: rem(10);

		@include mq($bp-tab-small) {
			inline-size: rem(150);
		}
	}
}

.progress-step__marker {
	align-items: center;
	background-color: $white;
    block-size: rem(44);
	border: solid 3px $storm-gray;
	border-radius: 50%;
	display: flex;
    inline-size: rem(44);
	justify-content: center;

	@include mq($bp-tab-small) {
		box-shadow: 0 0 0 rem(10) $white;
	}
}

.progress-step__marker.complete {
	background-color: $teal-green;
	border-color: $teal-green;
	color: $white;
	position: relative;

	&::before,
	&::after {
		background-color: $teal-green;
		content: '';
		position: absolute;
	}

	&::before {
        block-size: rem(38);
		border-radius: 50%;
        inline-size: rem(38);
        inset-block-start: 0;
		inset-inline-start: 0;
	}

	&::after {
        block-size: rem(9);
		border: solid;
		border-block-start-color: transparent;
		border-width: 0 0 3px 3px;
        inline-size: rem(18);
        inset-block-start: rem(13);
		inset-inline-start: rem(10);
		transform: rotate(-45deg);
	}
}

.progress-list a {
	color: $storm-gray;

	&:visited {
		color: $link-color--visited;
	}

	&:hover {
		color: $link-color--hover;
	}

	&:focus {
		box-shadow: 0 0 0 2px;
		color: $black;
		outline: solid 3px $focus-color;
		outline-offset: 2px;
		text-decoration: none;
	}

	&:active {
		color: $black;
	}
}